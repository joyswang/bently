buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.8.RELEASE")
    }
}

configurations {

    mybatisGenerator
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'spring-boot'


repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/db/mysql.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }

    properties;

}
task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.user")
    ant.properties['password'] = properties.getProperty("jdbc.pass")
    ant.properties['src_main_java'] = 'src/main/java'
    ant.properties['src_main_resources'] = 'src/main/resources'
    ant.properties['modelPackage'] = 'com.spring.bently.manager.db.model'
    ant.properties['mapperPackage'] = 'com.spring.bently.manager.db.mapper'
    ant.properties['sqlMapperPackage'] = 'sqlMapperPackage'
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'db/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')

        }
    }
}

dependencies {
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.36'
    mybatisGenerator 'tk.mybatis:mapper:3.3.2'
    compile(
            "org.springframework.boot:spring-boot-starter",
            "org.apache.commons:commons-lang3:3.3.2",
            "commons-io:commons-io:2.4",
            "commons-codec:commons-codec:1.10",
            "com.fasterxml.jackson.core:jackson-core:2.4.2",
            "com.fasterxml.jackson.core:jackson-databind:2.4.2",
            "commons-pool:commons-pool:1.6",
            "junit:junit:4.11",
            "dom4j:dom4j:1.6.1",
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.boot:spring-boot-starter-web",
            'org.mybatis.generator:mybatis-generator-core:1.3.2',
            'mysql:mysql-connector-java:5.1.36',
            'tk.mybatis:mapper:3.3.2',
            'org.mybatis:mybatis:3.2.4',
            'org.mybatis:mybatis-spring:1.2.5',
            'org.springframework:spring-tx:4.1.9.RELEASE',
            'com.alibaba:druid:1.0.18',
            'org.springframework:spring-jdbc:4.1.9.RELEASE'




    )
    testCompile(
            "junit:junit:4.11",
            "org.springframework.boot:spring-boot-starter-test"
    )
}